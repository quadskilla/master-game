Read-me
    # --- Fold to PF 3Bet (Com Window Function para raise_level) ---
    print(f"Calculando Fold to PF 3Bet para player_id {player_id} (com Window Function)...")
    cursor.execute("""
        WITH
        HeroOpenRaises AS (
            SELECT
                a.hand_db_id, a.action_sequence as hero_or_sequence, a.player_id as hero_id
            FROM actions a
            WHERE a.player_id = ? 
              AND a.street = 'Preflop' AND a.action_type IN ('bets', 'raises')
              AND COALESCE((SELECT COUNT(*)
                            FROM actions r_before_hero_or
                            WHERE r_before_hero_or.hand_db_id = a.hand_db_id AND r_before_hero_or.street = 'Preflop'
                              AND r_before_hero_or.action_type IN ('bets', 'raises')
                              AND r_before_hero_or.action_sequence < a.action_sequence), 0) = 0
        ),
        PreflopRaiseActionsInOrder AS (
            SELECT
                a.hand_db_id, a.player_id, a.action_sequence, a.action_type,
                SUM(1) OVER (PARTITION BY a.hand_db_id ORDER BY a.action_sequence ASC) as raise_level
            FROM actions a
            WHERE a.street = 'Preflop' AND a.action_type IN ('bets', 'raises')
        ),
        ValidVillain3Bets AS (
            SELECT
                hor.hand_db_id, hor.hero_id, hor.hero_or_sequence,
                pf_rio.player_id as villain_3bettor_id, pf_rio.action_sequence as villain_3bet_sequence
            FROM HeroOpenRaises hor
            JOIN PreflopRaiseActionsInOrder pf_rio ON hor.hand_db_id = pf_rio.hand_db_id
            WHERE pf_rio.raise_level = 2 
              AND pf_rio.player_id != hor.hero_id 
              AND pf_rio.action_sequence > hor.hero_or_sequence 
        ),
        HeroFaced3BetOpportunity AS (
            SELECT DISTINCT 
                vv3b.hand_db_id,
                hero_reply.action_type as hero_action_after_3bet
            FROM ValidVillain3Bets vv3b
            JOIN actions hero_reply ON vv3b.hand_db_id = hero_reply.hand_db_id
            WHERE hero_reply.player_id = vv3b.hero_id 
              AND hero_reply.street = 'Preflop'
              AND hero_reply.action_type NOT IN ('posts_sb', 'posts_bb', 'posts_ante') 
              AND hero_reply.action_sequence > vv3b.villain_3bet_sequence 
              AND NOT EXISTS (
                  SELECT 1
                  FROM PreflopRaiseActionsInOrder r4_check 
                  WHERE r4_check.hand_db_id = vv3b.hand_db_id
                    AND r4_check.raise_level = 3 
                    AND r4_check.action_sequence > vv3b.villain_3bet_sequence 
                    AND r4_check.action_sequence < hero_reply.action_sequence 
              )
        )
        SELECT
            (SELECT COUNT(DISTINCT hand_db_id) FROM HeroFaced3BetOpportunity) as opps,
            (SELECT COUNT(DISTINCT hand_db_id)
             FROM HeroFaced3BetOpportunity
             WHERE hero_action_after_3bet = 'folds'
            ) as acts;
    """, (player_id,))
    res = cursor.fetchone()
    if res:
        ps.fold_to_pf_3bet_opportunities = res['opps'] if res['opps'] is not None else 0
        ps.fold_to_pf_3bet_actions = res['acts'] if res['acts'] is not None else 0
    else:
        ps.fold_to_pf_3bet_opportunities = 0
        ps.fold_to_pf_3bet_actions = 0
    print(f"Fold to PF 3Bet Oportunidades: {ps.fold_to_pf_3bet_opportunities}, Ações: {ps.fold_to_pf_3bet_actions}")
